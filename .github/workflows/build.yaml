# This workflow will build and unit test the project.
# If the workflow is running on the "main" branch, then
# semantic-release is also run to create a new release (if
# warranted by the new commits being built).

name: Build & Test

on: 
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:
    # Allow workflow to be triggered manually.

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Build & Test (Python v${{ matrix.python-version }})

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.10']

    steps:
      - name: Trigger info
        run: |
          echo "Build triggered by event: " ${{ github.event_name }}
          echo "                 git ref: " ${{ github.ref }}

      - name: Trigger info
        run: |
          echo "Build triggered by event: " ${{ github.event_name }}
          echo "                 git ref: " ${{ github.ref }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make upgrade_pip

 
      - name: Build/Test project
        run: make ci

  create_release:
    needs: build
    # Only run this job on the main branch and only for our min version of Python.
    if: "github.ref_name == 'main' && github.event_name != 'pull_request'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install semantic-release 
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/exec
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/commit-analyzer
          pip install --user bumpversion

      - name: Create & Tag Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

